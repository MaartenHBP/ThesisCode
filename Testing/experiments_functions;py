from array import array
from audioop import mul
from math import sqrt
import math
import os
import functools
from pathlib import Path
import json
from datetime import datetime

from noise_robust_cobras.cobras import COBRAS
from noise_robust_cobras.querier.noisy_labelquerier import ProbabilisticNoisyQuerier
from noise_robust_cobras.querier.labelquerier import LabelQuerier
from noise_robust_cobras.metric_learning.metriclearning_algorithms import *
from noise_robust_cobras.metric_learning.rebuildInstance import *
from noise_robust_cobras.metric_learning.metriclearning import *
from noise_robust_cobras.clustering_algorithms.clustering_algorithms import *
from noise_robust_cobras.strategies.splitlevel_estimation import *
import copy
# from metric_learn import * -> werken met wrappers

import numpy as np 
import pandas as pd

from sklearn.model_selection import StratifiedKFold, KFold
import sklearn as sk
from statistics import mean
from sklearn.metrics import adjusted_rand_score
from sklearn.neighbors import KNeighborsClassifier

import matplotlib.pyplot as plt

from dask.distributed import Client, LocalCluster

import shutil

from sklearn.manifold import TSNE
from scipy.interpolate import interp1d
from matplotlib.animation import FuncAnimation, PillowWriter
from scipy.spatial import ConvexHull

nbRUNS = 100
ARGUMENTS = range(100)
SEED = 24
random_generator = np.random.default_rng(SEED)
seeds = [random_generator.integers(1,1000000) for i in range(nbRUNS)] # creation of the seeds
seedsForTSNE = [1, 25, 46, 87]

def runCOBRAS(seed, dataName):
    """This is the code to be called for the running COBRAS:
        - COBRAS (with constant split level)
        - Saving the repres with their clustering label and constraints for later use
    """
    pass

def Experiment1(seed, dataName, metricLearner):
    """This is the code to be called for the first experiment:
        - learn a metric beforehand and then run COBRAS
        - for seedsForTSNE calculate the TSNE, to see what the transformation does
    """
    pass

def Experiment2(seed, dataName, metricLearner):
    """This is the code to be called for the second experiment:
        - learn a metric to make the results of COBRAS better afterwards
        - for seedsForTSNE calculate the TSNE, to see what the transformation does
    """
    pass